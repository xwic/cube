Change Notes
============

2012-05-03	Mirceas
	-Add new interface for IMeasureFunction with Query support. Change cube 
	getCellValue(query) to let the measure function do the calculation if 
	we have a IMeasureFunctionQuerySupport measure. Used for multiple selection.
	-add createQuery(IQuery) to create a new query with elements from given query. 

** Major Structure Update - This new version is not datafile compatible with previous versions! **
2011-05-22 FLI
	- CubeSwapIndexed cube is now reading elements in blocks of max 8k to optimize read performance
	
2011-05-16/17 FLI
	- Added unique object identifier to allow simple ID based referencing in external storage
	- Added a cube version that is able to swap the leaf-elements to disk to free up memory (CubeSwapIndexed)

2011-05-13 FLI
	- Removed Warnings

2010-10-19 FLI
	- Optimized Indexed Cube serialization/deserialization performance and size
	
2010-10-09 FLI
	- Added new cube type INDEXED (CubeIndexed). This cube uses an internal, indexed
	  data table for fast search. The cube is about 9-30 times faster then the FlexCube.
	  The memory consumption is about twice as much as the FLEX_CUBE.
	  NOTE: The indexed cube does NOT YET SUPPPORT the dimension behaiviors NO_SPLASH and
	  		NO_AGGREGATION!
	- The cube cell map is now stored in a ICellStore implementation. The default
	  implementation is the MapCellStore

2010-10-07 FLI
	- Fixed a problem in the CubeFlexCalc where "empty" spots could
	  occur in the cache if data is read from the cube during mass-insert 
	  mode.
	   
2010-10-03 jbornema
	- ICubeCacheControl.clearCache() added.

2010-08-26 jbornema
	- Query/IQuery.getSelectedDimensions() added.

2010-07-22 jbornema
	- ICellLoader added used by CountLoader to store count information in CellExt.
	- ICube.getCell(ICell, boolean) added
	- CountFunction added
	- CellExt.isEmpty() implemented
	- Cube exception messages improved
	- CountLoader supports now CellExt and KeyExt for storing count information as well
	
2010-07-14 jbornema
	- DimensionBehavior now serializable
	- IUserObject added implemented by KeyExt and CellExt
	- Key supports uses DimensionBehavior in isSubKey and isSubKeyElement methods
	- Cell.toString, .hashCode and .equals added
	- CellExt missing writeExternal and readExternal added
	- Cube.writeExternal fixed DimensionBehavior usage
	- CubeFlexCalc removed unused code and fixed DimensionBehavior usage in .writeExternal
	- CubePreCache fixed DimensionBehavior usage
	- DefaultDimensionResolver(ICube) added to support DimensionBehavior
	- CountLoader cleaned: in future CountLoader will use a function instead of measure

2010-07-05 jbornema
	- CubeUtil.parseDimensionElementId(String, boolean) and CubeUtil.parseDimensionElementId(String, IDimension, boolean) added
	  to support auto create elements.

2010-06-29 FLI
	- Added possibility to set dimension behaviors, i.e. NO_SPLASH, NO_AGGREAGATION or FLAT

2010-05-17 FLI
	- Improved JDBCSerializerUtil performance of restoring dimension elements from the database
	
2010-05-14 FLI
	- Added possibility to seal a dimension to prevent changes. This will unfortunately cause an incompatibility
	  to older serialized datapools. 
	  
2010-05-11 FLI
	- Fixed a problem in the Flex cube cache in combination with mutable keys
	
2010-03-08 jbornema
	- DataPool: createDimension(String key) and createMeasure(String key) return types changed to interface. 

2010-02-23 kstein (commited by FLI)
	- Added the possibility to create temporary (softReferenced) cubes.

2010-02-08 kstein (commited by FLI)
	- Added ICubeCacheControl.buildCacheFromCube(ICube)

2009-11-17 jbornema
	- IKeyProvider implements required Serialized interface
	- FileDataPoolStorageProvider saved the data pool still in zip format even if the deserialization of zip failed (due to corrupt file or so) 

2009-11-12 jbornema
	- ICellProvider and IKeyProvider added to support customer Key and Cell extensions
	- Refactored usage of Cell to ICell
	- IDimensionElement.getTitlePath() added
	- Cell holds now an array of double and not Double obejcts anymore. This optimizes
	  overall memory allocation. Null values are stored as Double.NaN
	- CellExt and CellExtProvider added that supports userObject
	- Cube, CubeFlexCalc and CubePreCache increased version that supports new key and cell providers

2009-11-06 FLI
	- Added sortElements to IDimensionElement interface.

2009-10-07 jbornema
	- ICube: added allowSplash methods, added getCubeType
	- IDataPool.CubeType.PRE_CACHE added (implemented in CubePreCache)
	- IDimensionResolver added to implement changing IDimensionElements during aggregation
	- Key(Key) constuctor added - minor changes
	- KeyExt added that extends Key and provides a UserObject
	- Cube.createNewKey(IDimensionElement[]) added (for customer extension to a cube implementation)
	- Cube.serializeData added to switch between data and optimized data serialization
	- CubeFlexCalc pre-cache (path caching) function moved to new CubePreCache implementation extending CubeFlexCalc
	- FileDataPoolStorageProvider supports now serialization to zip files,
	  setting zipDataPool flag or just zipping mydatapool.datapool to mydatapool.datapool.zip enables it
	  	
2009-09-28 FLI
	- LastLeafFunction no longer returns 0.0 if no element is available at all.
	- Added ICube.createKey(IDimensionElement...)

2009-08-13 RPF
	- added another "null" check on class LastLeafFunction -> findLastLeaf(), caused Nullpointer in dashboard application

2009-08-11 FLI
	- Removed cube.cleanUp() as it was not implemented.
	- Added cube.createKey() method.

2009-08-07 FLI
	- Added LastLeafFunction
	
2009-08-07 RPF
	- Added parseDimensionPath to CubeUtil.
	
2009-08-03 FLI
	- Added TempMeasure helper class.

2009-07-10 jbornema
	- CubeFlexCalc.externalizeCache property added, to externalize cache data
	- CubeFlexCalc serialize version 4 added
	- Fixes in autoCachePaths mode

2009-07-06 jbornema
	- Fixed bug in autoCachePaths mode where the first aggregated cells had been not removed form the cache and aggregated again

2009-07-02 jbornema
	- FindUtil class for Cube browsing.
	- Added log() method to Cube class.
	- CubeFlexCalc support new autoCachePaths mode, using new class CachePath and CachePathDimensionDepth,
	  to pre-cache new Key paths usage. The trigger to calculate the cache (method buildCacheForPaths) is invoked
	  when total aggregation time of calcCellFromIndex and serialCalc calls exceeds last build cache time (1000 msec for first call).
	  Property buildCacheForPathsTimeout can be assigned instead of last build cache time.
	  Useful when cache statistics are not used or not applicable. 

2009-06-18 kstein
	- Added ICube.replace(ICube oldCube)
	- Added DataPool.replaceCube(ICube oldCube, ICube newCube)

2009-04-02	FLI
	- Added ICube.clear(Key);
	
2009 Jan till April
	- Added CubeFlexCalc implementation

2009-01-23	FLI
	- Implemented Externalizable interface for the cube's cell object, to speed up the serialization and
	  deserialization process and reduce the memory requirements during the load.

2009-01-21	FLI
	- Added possibility to reorder dimension elements
	- DifferenceFunction now can "negate" the result
	- PercentageValueFormat is creating the result with a NOBR tag to prevent line break
	- JDBCUtil stores the order_index of dimension elements to restore them in the same order. This requires a new database column!

2009-01-14	FLI
	- Added KValueFormatProvider
	
2009-01-13	FLI
	- The cube no longer creates the internal HashMap with the theoretical maximum capacity
	- DimensionElements with a '/' character in the key can no longer be created
	 
2008-12-30	FLI
	- Added IDataPoolManager.isDataPoolLoaded() method, to check if a DataPool is already loaded into memory.
	- Implemented JDBCSerializerUtil.restoreDimensions()
	
2008-12-29	FLI
	- Added listDataPoolKeys() to DataPoolManager.
	- Added JDBCSerializerUtil
	
2008-12-15	FLI
	- IDimension.getPath() now returns an empty string (as expected) and IDimensionElement.parsePath()
	  returns "this" if the argument is an empty string. 

2008-12-01	FLI
	- Added cube.clear(), cube.clear(IMeasure) and cube.clear(IMeasure, Key) to 
	  remove cells by measure/key.
	- Set cube.reset() to deprecated. Use .clear() instead. 
	- Fixed a StackOverflowException in the equals() method of the DimensionElement
	  that could happen when two elements are compared that are from different 
	  dimensions.
	  
2008-11-25	FLI
	- Optimized memory usage by refactoring the internal data model. This has
	  lead to a few API changes, but also improved performance. The memory
	  usage decreased by 24%, performance gain is at about 33%.  